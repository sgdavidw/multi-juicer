# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master
resources:
  repositories:
  - repository: kubernetes-ingress # The name used to reference this repository in the checkout step
    type: github
    endpoint: 'github connection 1'
    name: 'sgdavidw/kubernetes-ingress'


variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '7b4f56f6-2202-4be1-95b1-880f0f1ecf94'
  imageRepository: 'sgdavidwmultijuicer'
  containerRegistry: 'napmultijuiceracr.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'napmultijuiceracr5004-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:


    - checkout: self
    - task: Docker@1
      displayName: 'Build an image'
      inputs:
        azureSubscriptionEndpoint: 'nap-multi-juicer - Azure'
        azureContainerRegistry: napmultijuiceracr.azurecr.io
        imageName: 'napmultijuiceracr.azurecr.io/napmultijuicer:$(Build.BuildId)'

    - task: Docker@1
      displayName: 'Push an image'
      inputs:
        azureSubscriptionEndpoint: 'nap-multi-juicer - Azure'
        azureContainerRegistry: napmultijuiceracr.azurecr.io
        command: 'Push an image'
        imageName: 'napmultijuiceracr.azurecr.io/napmultijuicer:$(Build.BuildId)'

    - task: HelmInstaller@0
      displayName: 'Install Helm 3.*.*'
      inputs:
        helmVersion: 3.0.2
        checkLatestHelmVersion: false
        kubectlVersion: 1.10.3
        checkLatestKubectl: false
    - script: |
        dir $(Build.SourcesDirectory)
        dir $(Build.SourcesDirectory)/multi-juicer/helm/multi-juicer
        dir $(Build.ArtifactStagingDirectory)
    - task: HelmDeploy@0
      displayName: 'helm package'
      inputs:
        azureSubscription: 'nap-multi-juicer - Azure'
        azureResourceGroup: 'nap-multi-juicer-rg'
        kubernetesCluster: 'nap-multi-juicer'
        command: package
        chartPath: '$(Build.SourcesDirectory)/multi-juicer/helm/multi-juicer'
        save: false

    - task: DownloadSecureFile@1
      name: nginxrepokey
      displayName: 'Download nginx-repo.key'
      inputs:
        secureFile: 'nginx-repo.key'
    - task: DownloadSecureFile@1
      name: nginxrepocrt
      displayName: 'Download nginx-repo.crt'
      inputs:
        secureFile: 'nginx-repo.crt'
        
    - script: |
        echo $(Build.SourcesDirectory)
        echo $(Build.ArtifactStagingDirectory)
        echo $(nginxrepokey.secureFilePath)
        echo $(nginxrepocrt.secureFilePath)
        dir $(nginxrepokey.secureFilePath)
    - checkout: kubernetes-ingress
    - script: |        
        cd $(Build.SourcesDirectory)/kubernetes-ingress
        git checkout v1.8.1    
        cp $(nginxrepokey.secureFilePath) $(Build.SourcesDirectory)/kubernetes-ingress/nginx-repo.key 
        cp $(nginxrepocrt.secureFilePath) $(Build.SourcesDirectory)/kubernetes-ingress/nginx-repo.crt
        dir $(Build.SourcesDirectory)/kubernetes-ingress 
        make DOCKERFILE=DockerfileForPlus PREFIX=napmultijuiceracr.azurecr.io/nginx-plus-ingress
      continueOnError: true

    - task: Docker@1
      displayName: 'Push nginx plus ingress image'
      inputs:
        azureSubscriptionEndpoint: 'nap-multi-juicer - Azure'
        azureContainerRegistry: napmultijuiceracr.azurecr.io
        command: 'Push an image'
        imageName: 'napmultijuiceracr.azurecr.io/nginx-plus-ingress:1.8.1'


    - task: HelmDeploy@0
      displayName: 'helm package nginx ingress'
      inputs:
        azureSubscription: 'nap-multi-juicer - Azure'
        azureResourceGroup: 'nap-multi-juicer-rg'
        kubernetesCluster: 'nap-multi-juicer'
        command: package
        chartPath: '$(Build.SourcesDirectory)/kubernetes-ingress/deployments/helm-chart'
        save: false

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifacts: drop'
      
- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'sgdavidwmultijuicer.dev'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureResourceGroupDeployment@2
            displayName: 'Azure Deployment:Create AKS cluster'
            inputs:
              azureSubscription: 'nap-multi-juicer - Azure'
              resourceGroupName: 'nap-multi-juicer-rg'
              location: 'East US'
              templateLocation: 'URL of the file'
              csmFileLink: 'https://raw.githubusercontent.com/Microsoft/devops-project-samples/ebfc76733eb82e2103b96309e0e6983a69063b9d/armtemplates/kubernetes/aks-template.json'
              overrideParameters: '-clusterName "nap-multi-juicer" -dnsPrefix "nap-multi-juicer" -appInsightsLocation "East US" -clusterLocation "East US" -servicePrincipalClientId "$(ServicePrincipalId)" -servicePrincipalClientSecret "$(ServicePrincipalKey)" -agentCount 3 -agentVMSize Standard_D2_v2 -kubernetesVersion 1.16.10 -omsLocation "East US" -omsWorkspaceName "3a20"'
              deploymentOutputs: deploymentOutputs

          #Your build pipeline references an undefined variable named ‘deploymentOutputs’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972

          - powershell: |
            $deploymentOutputs=(ConvertFrom-Json '$(deploymentOutputs)')
            $applicationRoutingZone=$deploymentOutputs.applicationRoutingZone.value
            $aiKey=$deploymentOutputs.aiKey.value
            Write-Host "##vso[task.setvariable variable=applicationRoutingZone;]$applicationRoutingZone"
            Write-Host "##vso[task.setvariable variable=aiKey;]$aiKey"
            displayName: 'Extract the ApplicationRoutingZone'

              
          - task: HelmInstaller@0
            displayName: 'Install Helm 3.*.*'
            inputs:
              helmVersion: 3.0.2
              checkLatestHelmVersion: false
              kubectlVersion: 1.10.3
              checkLatestKubectl: false

          #Your build pipeline references an undefined variable named ‘applicationRoutingZone’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972

          steps:
          - task: HelmDeploy@0
            displayName: 'Helm upgrade multi-juicer'
            inputs:
              azureSubscription: 'nap-multi-juicer - Azure'
              azureResourceGroup: 'nap-multi-juicer-rg'
              kubernetesCluster: 'nap-multi-juicer'
              namespace: dev
              command: upgrade
              chartType: FilePath
              chartPath: '$(System.DefaultWorkingDirectory)/Drop/drop/multi-juicer-3.7.0.tgz'
              releaseName: azuredevops
              force: true
              arguments: '--set image.repository=napmultijuiceracr.azurecr.io/napmultijuicer --set image.tag=$(Build.BuildId) --set ingress.enabled=true --set ingress.hostname=dev-sampleapp.$(applicationRoutingZone)'

